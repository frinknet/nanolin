#!/bin/sh

[ -n "$NLDBG" ] && echo "DEBUG: ${NLBIN##*/} ${0##*/} $@ - $0"

# check usage
[ -z "$1" ] && echo "$NLHDR
	Runs a script and its children with the supplied options.

    Usage:
	
	${NLBIN##*/} each <action> [options]
" && exit

[ -n "$NLDBG" ] && echo "DEBUG: ${NLBIN##*/} each $@"

NLACT="${1##*/}"
NLWAIT=""
NLEXIT=0

shift

# set aliases to shorten code
alias runexec="'$NLDIR'/$NLACT"
alias runlock="'$NLDIR'/lock"
alias logcall="'$NLDIR'/log call ${NLBIN##*/} $NLACT"
alias logexit="'$NLDIR'/log exit ${NLBIN##*/} $NLACT"

# set parent runlock
runlock new $NLACT $$

# check that we have something to run
[ ! -e "$NLDIR/$NLACT" ] && echo "$NLHDR
    Command does not exist:

	${NLBIN##*/} ${NLACT/./ } $@
" && exit

# run parent syncronous
logcall $@ && runexec $@ && NLEXIT=$((NLEXIT+$?)) && logexit $@

# loop through actions running asyncronously 
for NLDO in "$NLDIR/$NLACT".*; do
	# make sure we can execute
	[ ! -x "$NLDO" ] && continue

	# aggregate all calls to wait for
	NLWAIT="$NLWAIT ${NLDO##*/}"

	# filter out last
	[ "${NLDO##*.}" == "last" ] && continue

	# run with locks and logging in new process
	("$NLBIN" ${NLDO##*/} $@ && NLEXIT=$((NLEXIT+$?))) &
done 

# run last script after all others
[ -x "$NLDIR/$NLACT.last" ] && "$NLDIR/$NLACT.last" $@ && NLEXIT=$((NLEXIT+$?))

# wait for children and finally set each runlock as finished
[ -n "$NLWAIT" ] && runlock wait 0 $NLWAIT

# set lock as done
runlock set $NLACT

# return exit
exit $NLEXIT
